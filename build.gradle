plugins {
    id 'java'
    id 'com.mooltiverse.oss.nyx' version '3.1.3'
}

group = 'com.example'
// version will be determined by Nyx

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
}

test {
    useJUnitPlatform()
}

// Nyx yapılandırması
nyx {
    preset = 'simple'
    releasePrefix = 'v'
    
    // Proje akışına göre minor sürüm artışını varsayılan yapıyoruz
    // feature branch'leri için minor, hotfix'ler için patch artışı yapılacak
    bump = 'minor'
    
    changelog {
        path = 'CHANGELOG.md'
        sections = [
            'Feature': 'Yeni özellikler ve geliştirmeler (feature/ branch\'lerinden)',
            'Hotfix': 'Hata düzeltmeleri ve kritik yamalar (hotfix/ branch\'lerinden)',
            'Changed': 'Mevcut özelliklerde yapılan değişiklikler',
            'Removed': 'Kaldırılan özellikler ve fonksiyonlar'
        ]
        substitutions = [
            'pattern': '(?m)^#\\# \\[?([0-9]+\\.[0-9]+\\.[0-9]+)\\]?.*$',
            'replacement': '## [$1] - {{#timestampFormat}}yyyy-MM-dd{{/timestampFormat}}'
        ]
    }

    // Git tag yapılandırması için release types
    releaseTypes {
        enabled = ["mainline", "release", "hotfix"]
        
        mainline {
            matchBranches = ["main", "production", "master"]
            publishToRemote = true
        }
        
        release {
            matchBranches = ["r[0-9]+\\.[0-9]+\\.[0-9]+"]
            collapseVersions = false
            publishToRemote = true
        }
        
        hotfix {
            matchBranches = ["hotfix/.*"]
            bump = "patch"
            collapseVersions = false
            publishToRemote = false
        }
    }
    
    // Commit mesajlarını tanıma kuralları
    commitMessageConventions {
        enabled = ['conventionalCommits']
        
        // Özel commit mesajı kuralı ekliyoruz (JIRA task koduyla)
        conventionalCommits {
            expression = '^(feat|fix|docs|style|refactor|test|chore)(\\([\\w\\s-]+\\))?(!)?:\\s([A-Z]+-\\d+)?\\s?(.+)'
            // Task kodu için grup: $4
        }
    }
    
    // Git entegrasyonu
    git {
        remotes {
            origin {
                pushBranches = true
                pushTags = true
                user = System.getenv('GIT_USER')
                password = System.getenv('GIT_PASSWORD')
                // CI ortamında kullanılmak üzere çevre değişkenlerinden alınır
            }
        }
    }
}